# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Docker Koa Node.js CI

on:
  push:
    branches: [ docker-koa ]
  pull_request:
    types: [closed]
    branches:
      - docker-koa

jobs:
  deploy:

    runs-on: ubuntu-latest

    name: Deploy to server
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      # - name: Install and Build
      #   run: |
      #     npm install

      #  将构建好的文件打包
      - name: Move files and compress
        run: |
          # cd ./dist/
          # sleep 1s
          # sudo tar -zcvf ../node-koa.zip *

          tar -zcvf docker-koa.tar.gz *

      # 使用Scp脚本拷贝到服务器
      - name: Scp file to aliyun
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ALIYUM_HOST }}
          username: ${{ secrets.ALIYUM_USER }}
          password: ${{ secrets.ALIYUM_PWD }}
          port: ${{ secrets.ALIYUM_PORT }}
          source: "docker-koa.tar.gz"
          target: "/home/docker-koa" # 会自动创建此目录

      - name: Exec deploy script with SSH
        uses: appleboy/ssh-action@master
        with:
          command_timeout: 8m
          host: ${{ secrets.ALIYUM_HOST }}
          username: ${{ secrets.ALIYUM_USER }}
          password: ${{ secrets.ALIYUM_PWD }}
          port: ${{secrets.ALIYUM_PORT }}
          # script: sh ${{ secrets.PATH }}/blog-front/.deploy/main.sh
          script: |
            cd /home/docker-koa
            tar -zxvf /home/docker-koa/docker-koa.tar.gz
            docker-compose up -d --force-recreate --build
            # sudo docker-compose -f docker-compose-prod.yml build
            # sudo docker-compose -f docker-compose-prod.yml up

